%!PS-Adobe-2.0 EPSF-2.0
%%Title: reward.eps
%%Creator: gnuplot 5.4 patchlevel 3
%%CreationDate: Fri Jan  6 16:19:24 2023
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -83 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (reward.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 3)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jan  6 16:19:24 2023)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Courier) findfont 250 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1225 800 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 800 M
[ [(Courier) 250.0 0.0 true true 0 ( 0)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
/vshift -83 def
1.000 UL
LTb
LCb setrgbcolor
1225 1299 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 1299 M
[ [(Courier) 250.0 0.0 true true 0 ( 0.2)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 1797 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 1797 M
[ [(Courier) 250.0 0.0 true true 0 ( 0.4)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 2296 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 2296 M
[ [(Courier) 250.0 0.0 true true 0 ( 0.6)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 2795 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 2795 M
[ [(Courier) 250.0 0.0 true true 0 ( 0.8)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 3293 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 3293 M
[ [(Courier) 250.0 0.0 true true 0 ( 1)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 3792 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 3792 M
[ [(Courier) 250.0 0.0 true true 0 ( 1.2)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 4290 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 4290 M
[ [(Courier) 250.0 0.0 true true 0 ( 1.4)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 4789 M
63 0 V
5461 0 R
-63 0 V
stroke
1075 4789 M
[ [(Courier) 250.0 0.0 true true 0 ( 1.6)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1225 800 M
0 63 V
0 3926 R
0 -63 V
stroke
1225 550 M
[ [(Courier) 250.0 0.0 true true 0 ( 0)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2606 800 M
0 63 V
0 3926 R
0 -63 V
stroke
2606 550 M
[ [(Courier) 250.0 0.0 true true 0 ( 500)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3987 800 M
0 63 V
0 3926 R
0 -63 V
stroke
3987 550 M
[ [(Courier) 250.0 0.0 true true 0 ( 1000)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5368 800 M
0 63 V
0 3926 R
0 -63 V
stroke
5368 550 M
[ [(Courier) 250.0 0.0 true true 0 ( 1500)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6749 800 M
0 63 V
0 3926 R
0 -63 V
stroke
6749 550 M
[ [(Courier) 250.0 0.0 true true 0 ( 2000)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1225 4789 N
0 -3989 V
5524 0 V
0 3989 V
-5524 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
237 2794 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Courier) 250.0 0.0 true true 0 (Average rewards)]
] -83.3 MCshow
grestore
/Courier findfont 250 scalefont setfont
LTb
LCb setrgbcolor
3987 175 M
[ [(Courier) 250.0 0.0 true true 0 (Unit time)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
LTb
% Begin plot #1
2.000 UP
1.000 UL
LTb
LC0 setrgbcolor
LCb setrgbcolor
5636 1738 M
[ [(Courier) 250.0 0.0 true true 0 (gUCB)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
2.000 UP
1.000 UL
LTb
LC0 setrgbcolor
5786 1738 M
663 0 V
1225 800 M
138 2846 V
138 453 V
138 129 V
138 156 V
139 64 V
138 53 V
138 24 V
138 9 V
138 86 V
138 -47 V
138 25 V
138 33 V
138 18 V
138 6 V
139 -55 V
138 66 V
138 -9 V
138 59 V
138 11 V
138 -53 V
138 -48 V
138 88 V
138 3 V
138 13 V
139 34 V
138 -40 V
138 2 V
138 -22 V
138 29 V
138 -35 V
138 7 V
138 -21 V
138 47 V
138 -22 V
139 34 V
138 6 V
138 10 V
138 -50 V
138 0 V
1225 800 Crs
1363 3646 Crs
1501 4099 Crs
1639 4228 Crs
1777 4384 Crs
1916 4448 Crs
2054 4501 Crs
2192 4525 Crs
2330 4534 Crs
2468 4620 Crs
2606 4573 Crs
2744 4598 Crs
2882 4631 Crs
3020 4649 Crs
3158 4655 Crs
3297 4600 Crs
3435 4666 Crs
3573 4657 Crs
3711 4716 Crs
3849 4727 Crs
3987 4674 Crs
4125 4626 Crs
4263 4714 Crs
4401 4717 Crs
4539 4730 Crs
4678 4764 Crs
4816 4724 Crs
4954 4726 Crs
5092 4704 Crs
5230 4733 Crs
5368 4698 Crs
5506 4705 Crs
5644 4684 Crs
5782 4731 Crs
5920 4709 Crs
6059 4743 Crs
6197 4749 Crs
6335 4759 Crs
6473 4709 Crs
6611 4709 Crs
6117 1738 Crs
% End plot #1
% Begin plot #2
2.000 UP
1.000 UL
LTb
LC1 setrgbcolor
LCb setrgbcolor
5636 1488 M
[ [(Courier) 250.0 0.0 true true 0 (IUCB)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
2.000 UP
1.000 UL
LTb
LC1 setrgbcolor
5786 1488 M
663 0 V
1225 800 M
138 1148 V
138 208 V
138 -90 V
138 152 V
139 -109 V
138 -40 V
138 57 V
138 2 V
138 34 V
138 -58 V
138 62 V
138 -40 V
138 -34 V
138 141 V
139 -152 V
138 178 V
138 -76 V
138 44 V
138 -168 V
138 202 V
138 -120 V
138 127 V
138 -48 V
138 -98 V
139 146 V
138 -83 V
138 66 V
138 -66 V
138 -118 V
138 29 V
138 24 V
138 270 V
138 -178 V
138 -108 V
139 18 V
138 -85 V
138 206 V
138 68 V
138 -178 V
1225 800 Box
1363 1948 Box
1501 2156 Box
1639 2066 Box
1777 2218 Box
1916 2109 Box
2054 2069 Box
2192 2126 Box
2330 2128 Box
2468 2162 Box
2606 2104 Box
2744 2166 Box
2882 2126 Box
3020 2092 Box
3158 2233 Box
3297 2081 Box
3435 2259 Box
3573 2183 Box
3711 2227 Box
3849 2059 Box
3987 2261 Box
4125 2141 Box
4263 2268 Box
4401 2220 Box
4539 2122 Box
4678 2268 Box
4816 2185 Box
4954 2251 Box
5092 2185 Box
5230 2067 Box
5368 2096 Box
5506 2120 Box
5644 2390 Box
5782 2212 Box
5920 2104 Box
6059 2122 Box
6197 2037 Box
6335 2243 Box
6473 2311 Box
6611 2133 Box
6117 1488 Box
% End plot #2
% Begin plot #3
2.000 UP
1.000 UL
LTb
LC2 setrgbcolor
LCb setrgbcolor
5636 1238 M
[ [(Courier) 250.0 0.0 true true 0 (gossip)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
2.000 UP
1.000 UL
LTb
LC2 setrgbcolor
5786 1238 M
663 0 V
1225 800 M
138 626 V
138 122 V
138 155 V
138 143 V
139 151 V
138 84 V
138 99 V
138 2 V
138 97 V
138 91 V
138 -16 V
138 102 V
138 85 V
138 56 V
139 28 V
138 10 V
138 58 V
138 -86 V
138 143 V
138 -102 V
138 208 V
138 -122 V
138 91 V
138 94 V
139 -28 V
138 74 V
138 -123 V
138 122 V
138 113 V
138 -14 V
138 -61 V
138 42 V
138 -92 V
138 129 V
139 97 V
138 -5 V
138 -61 V
138 -57 V
138 58 V
1225 800 Dia
1363 1426 Dia
1501 1548 Dia
1639 1703 Dia
1777 1846 Dia
1916 1997 Dia
2054 2081 Dia
2192 2180 Dia
2330 2182 Dia
2468 2279 Dia
2606 2370 Dia
2744 2354 Dia
2882 2456 Dia
3020 2541 Dia
3158 2597 Dia
3297 2625 Dia
3435 2635 Dia
3573 2693 Dia
3711 2607 Dia
3849 2750 Dia
3987 2648 Dia
4125 2856 Dia
4263 2734 Dia
4401 2825 Dia
4539 2919 Dia
4678 2891 Dia
4816 2965 Dia
4954 2842 Dia
5092 2964 Dia
5230 3077 Dia
5368 3063 Dia
5506 3002 Dia
5644 3044 Dia
5782 2952 Dia
5920 3081 Dia
6059 3178 Dia
6197 3173 Dia
6335 3112 Dia
6473 3055 Dia
6611 3113 Dia
6117 1238 Dia
% End plot #3
% Begin plot #4
2.000 UP
1.000 UL
LTb
LC3 setrgbcolor
LCb setrgbcolor
5636 988 M
[ [(Courier) 250.0 0.0 true true 0 (proposed)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
2.000 UP
1.000 UL
LTb
LC3 setrgbcolor
5786 988 M
663 0 V
1225 800 M
138 1646 V
138 180 V
138 189 V
138 166 V
139 99 V
138 128 V
138 21 V
138 110 V
138 -5 V
138 115 V
138 137 V
138 7 V
138 56 V
138 10 V
139 128 V
138 -76 V
138 66 V
138 -18 V
138 62 V
138 3 V
138 51 V
138 10 V
138 6 V
138 45 V
139 -47 V
138 76 V
138 28 V
138 2 V
138 -40 V
138 125 V
138 -143 V
138 60 V
138 8 V
138 -3 V
139 52 V
138 -8 V
138 14 V
138 -6 V
138 49 V
1225 800 Circle
1363 2446 Circle
1501 2626 Circle
1639 2815 Circle
1777 2981 Circle
1916 3080 Circle
2054 3208 Circle
2192 3229 Circle
2330 3339 Circle
2468 3334 Circle
2606 3449 Circle
2744 3586 Circle
2882 3593 Circle
3020 3649 Circle
3158 3659 Circle
3297 3787 Circle
3435 3711 Circle
3573 3777 Circle
3711 3759 Circle
3849 3821 Circle
3987 3824 Circle
4125 3875 Circle
4263 3885 Circle
4401 3891 Circle
4539 3936 Circle
4678 3889 Circle
4816 3965 Circle
4954 3993 Circle
5092 3995 Circle
5230 3955 Circle
5368 4080 Circle
5506 3937 Circle
5644 3997 Circle
5782 4005 Circle
5920 4002 Circle
6059 4054 Circle
6197 4046 Circle
6335 4060 Circle
6473 4054 Circle
6611 4103 Circle
6117 988 Circle
% End plot #4
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1225 4789 N
0 -3989 V
5524 0 V
0 3989 V
-5524 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Courier
