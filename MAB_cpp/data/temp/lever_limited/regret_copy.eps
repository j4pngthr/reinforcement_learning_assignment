%!PS-Adobe-2.0 EPSF-2.0
%%Title: regret.eps
%%Creator: gnuplot 5.4 patchlevel 3
%%CreationDate: Thu Jan  5 15:53:28 2023
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -83 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (regret.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 3)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jan  5 15:53:28 2023)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Courier) findfont 250 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1375 800 M
63 0 V
5311 0 R
-63 0 V
stroke
1225 800 M
[ [(Courier) 250.0 0.0 true true 0 ( 0)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
/vshift -83 def
1.000 UL
LTb
LCb setrgbcolor
1375 1598 M
63 0 V
5311 0 R
-63 0 V
stroke
1225 1598 M
[ [(Courier) 250.0 0.0 true true 0 ( 500)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1375 2396 M
63 0 V
5311 0 R
-63 0 V
stroke
1225 2396 M
[ [(Courier) 250.0 0.0 true true 0 ( 1000)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1375 3193 M
63 0 V
5311 0 R
-63 0 V
stroke
1225 3193 M
[ [(Courier) 250.0 0.0 true true 0 ( 1500)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1375 3991 M
63 0 V
5311 0 R
-63 0 V
stroke
1225 3991 M
[ [(Courier) 250.0 0.0 true true 0 ( 2000)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1375 4789 M
63 0 V
5311 0 R
-63 0 V
stroke
1225 4789 M
[ [(Courier) 250.0 0.0 true true 0 ( 2500)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1375 800 M
0 63 V
0 3926 R
0 -63 V
stroke
1375 550 M
[ [(Courier) 250.0 0.0 true true 0 ( 0)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1912 800 M
0 63 V
0 3926 R
0 -63 V
stroke
1912 550 M
[ [(Courier) 250.0 0.0 true true 0 ( 200)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2450 800 M
0 63 V
0 3926 R
0 -63 V
stroke
2450 550 M
[ [(Courier) 250.0 0.0 true true 0 ( 400)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2987 800 M
0 63 V
0 3926 R
0 -63 V
stroke
2987 550 M
[ [(Courier) 250.0 0.0 true true 0 ( 600)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3525 800 M
0 63 V
0 3926 R
0 -63 V
stroke
3525 550 M
[ [(Courier) 250.0 0.0 true true 0 ( 800)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4062 800 M
0 63 V
0 3926 R
0 -63 V
stroke
4062 550 M
[ [(Courier) 250.0 0.0 true true 0 ( 1000)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4599 800 M
0 63 V
0 3926 R
0 -63 V
stroke
4599 550 M
[ [(Courier) 250.0 0.0 true true 0 ( 1200)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5137 800 M
0 63 V
0 3926 R
0 -63 V
stroke
5137 550 M
[ [(Courier) 250.0 0.0 true true 0 ( 1400)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5674 800 M
0 63 V
0 3926 R
0 -63 V
stroke
5674 550 M
[ [(Courier) 250.0 0.0 true true 0 ( 1600)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6212 800 M
0 63 V
0 3926 R
0 -63 V
stroke
6212 550 M
[ [(Courier) 250.0 0.0 true true 0 ( 1800)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6749 800 M
0 63 V
0 3926 R
0 -63 V
stroke
6749 550 M
[ [(Courier) 250.0 0.0 true true 0 ( 2000)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1375 4789 N
0 -3989 V
5374 0 V
0 3989 V
-5374 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
237 2794 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Courier) 250.0 0.0 true true 0 (Cumulative regrets)]
] -83.3 MCshow
grestore
/Courier findfont 250 scalefont setfont
LTb
LCb setrgbcolor
4062 175 M
[ [(Courier) 250.0 0.0 true true 0 (Unit time)]
] -83.3 MCshow
/Courier findfont 250 scalefont setfont
LTb
% Begin plot #1
2.000 UP
1.000 UL
LTb
LC0 setrgbcolor
LCb setrgbcolor
2725 4601 M
[ [(Courier) 250.0 0.0 true true 0 (gUCB)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
2.000 UP
1.000 UL
LTb
LC0 setrgbcolor
2875 4601 M
663 0 V
1375 800 M
134 62 V
135 28 V
134 20 V
134 16 V
135 13 V
134 11 V
134 9 V
135 9 V
134 8 V
135 7 V
134 7 V
134 6 V
135 5 V
134 6 V
134 5 V
135 4 V
134 5 V
134 4 V
135 4 V
134 4 V
134 3 V
135 4 V
134 3 V
134 4 V
135 3 V
134 3 V
134 3 V
135 2 V
134 3 V
135 3 V
134 2 V
134 3 V
135 2 V
134 3 V
134 2 V
135 3 V
134 2 V
134 2 V
135 2 V
1375 800 Crs
1509 862 Crs
1644 890 Crs
1778 910 Crs
1912 926 Crs
2047 939 Crs
2181 950 Crs
2315 959 Crs
2450 968 Crs
2584 976 Crs
2719 983 Crs
2853 990 Crs
2987 996 Crs
3122 1001 Crs
3256 1007 Crs
3390 1012 Crs
3525 1016 Crs
3659 1021 Crs
3793 1025 Crs
3928 1029 Crs
4062 1033 Crs
4196 1036 Crs
4331 1040 Crs
4465 1043 Crs
4599 1047 Crs
4734 1050 Crs
4868 1053 Crs
5002 1056 Crs
5137 1058 Crs
5271 1061 Crs
5406 1064 Crs
5540 1066 Crs
5674 1069 Crs
5809 1071 Crs
5943 1074 Crs
6077 1076 Crs
6212 1079 Crs
6346 1081 Crs
6480 1083 Crs
6615 1085 Crs
3206 4601 Crs
% End plot #1
% Begin plot #2
2.000 UP
1.000 UL
LTb
LC1 setrgbcolor
LCb setrgbcolor
2725 4351 M
[ [(Courier) 250.0 0.0 true true 0 (IUCB)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
2.000 UP
1.000 UL
LTb
LC1 setrgbcolor
2875 4351 M
663 0 V
1375 800 M
134 88 V
135 84 V
134 84 V
134 83 V
135 83 V
134 84 V
134 83 V
135 83 V
134 82 V
135 82 V
134 83 V
134 82 V
135 83 V
134 82 V
134 82 V
135 83 V
134 82 V
134 84 V
135 81 V
134 83 V
134 81 V
135 82 V
134 81 V
134 82 V
135 81 V
134 80 V
134 83 V
135 80 V
134 82 V
135 83 V
134 81 V
134 82 V
135 82 V
134 83 V
134 83 V
135 82 V
134 82 V
134 83 V
135 82 V
1375 800 Box
1509 888 Box
1644 972 Box
1778 1056 Box
1912 1139 Box
2047 1222 Box
2181 1306 Box
2315 1389 Box
2450 1472 Box
2584 1554 Box
2719 1636 Box
2853 1719 Box
2987 1801 Box
3122 1884 Box
3256 1966 Box
3390 2048 Box
3525 2131 Box
3659 2213 Box
3793 2297 Box
3928 2378 Box
4062 2461 Box
4196 2542 Box
4331 2624 Box
4465 2705 Box
4599 2787 Box
4734 2868 Box
4868 2948 Box
5002 3031 Box
5137 3111 Box
5271 3193 Box
5406 3276 Box
5540 3357 Box
5674 3439 Box
5809 3521 Box
5943 3604 Box
6077 3687 Box
6212 3769 Box
6346 3851 Box
6480 3934 Box
6615 4016 Box
3206 4351 Box
% End plot #2
% Begin plot #3
2.000 UP
1.000 UL
LTb
LC2 setrgbcolor
LCb setrgbcolor
2725 4101 M
[ [(Courier) 250.0 0.0 true true 0 (gossip)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
2.000 UP
1.000 UL
LTb
LC2 setrgbcolor
2875 4101 M
663 0 V
1375 800 M
134 111 V
135 102 V
134 98 V
134 93 V
135 90 V
134 87 V
134 86 V
135 82 V
134 81 V
135 79 V
134 77 V
134 76 V
135 73 V
134 73 V
134 71 V
135 70 V
134 69 V
134 67 V
135 67 V
134 66 V
134 65 V
135 63 V
134 63 V
134 61 V
135 61 V
134 61 V
134 59 V
135 59 V
134 58 V
135 57 V
134 57 V
134 56 V
135 55 V
134 55 V
134 54 V
135 54 V
134 53 V
134 53 V
135 52 V
1375 800 Dia
1509 911 Dia
1644 1013 Dia
1778 1111 Dia
1912 1204 Dia
2047 1294 Dia
2181 1381 Dia
2315 1467 Dia
2450 1549 Dia
2584 1630 Dia
2719 1709 Dia
2853 1786 Dia
2987 1862 Dia
3122 1935 Dia
3256 2008 Dia
3390 2079 Dia
3525 2149 Dia
3659 2218 Dia
3793 2285 Dia
3928 2352 Dia
4062 2418 Dia
4196 2483 Dia
4331 2546 Dia
4465 2609 Dia
4599 2670 Dia
4734 2731 Dia
4868 2792 Dia
5002 2851 Dia
5137 2910 Dia
5271 2968 Dia
5406 3025 Dia
5540 3082 Dia
5674 3138 Dia
5809 3193 Dia
5943 3248 Dia
6077 3302 Dia
6212 3356 Dia
6346 3409 Dia
6480 3462 Dia
6615 3514 Dia
3206 4101 Dia
% End plot #3
% Begin plot #4
2.000 UP
1.000 UL
LTb
LC3 setrgbcolor
LCb setrgbcolor
2725 3851 M
[ [(Courier) 250.0 0.0 true true 0 (proposed)]
] -83.3 MRshow
/Courier findfont 250 scalefont setfont
2.000 UP
1.000 UL
LTb
LC3 setrgbcolor
2875 3851 M
663 0 V
1375 800 M
134 58 V
135 53 V
134 49 V
134 46 V
135 45 V
134 42 V
134 40 V
135 40 V
134 38 V
135 38 V
134 34 V
134 36 V
135 33 V
134 32 V
134 32 V
135 30 V
134 30 V
134 30 V
135 29 V
134 29 V
134 28 V
135 28 V
134 27 V
134 26 V
135 26 V
134 26 V
134 25 V
135 25 V
134 25 V
135 25 V
134 24 V
134 24 V
135 24 V
134 23 V
134 23 V
135 24 V
134 23 V
134 23 V
135 23 V
1375 800 Circle
1509 858 Circle
1644 911 Circle
1778 960 Circle
1912 1006 Circle
2047 1051 Circle
2181 1093 Circle
2315 1133 Circle
2450 1173 Circle
2584 1211 Circle
2719 1249 Circle
2853 1283 Circle
2987 1319 Circle
3122 1352 Circle
3256 1384 Circle
3390 1416 Circle
3525 1446 Circle
3659 1476 Circle
3793 1506 Circle
3928 1535 Circle
4062 1564 Circle
4196 1592 Circle
4331 1620 Circle
4465 1647 Circle
4599 1673 Circle
4734 1699 Circle
4868 1725 Circle
5002 1750 Circle
5137 1775 Circle
5271 1800 Circle
5406 1825 Circle
5540 1849 Circle
5674 1873 Circle
5809 1897 Circle
5943 1920 Circle
6077 1943 Circle
6212 1967 Circle
6346 1990 Circle
6480 2013 Circle
6615 2036 Circle
3206 3851 Circle
% End plot #4
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1375 4789 N
0 -3989 V
5374 0 V
0 3989 V
-5374 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Courier
